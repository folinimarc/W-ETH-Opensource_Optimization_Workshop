Solver command line: ['/home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/_Solvers/Ubuntu_Bionic/Cbc-2.9.8/bin/cbc', '-printingOptions', 'all', '-import', '/home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/04_Adjacency/tmpy8h_u5wt.pyomo.lp', '-stat=1', '-solve', '-solu', '/home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/04_Adjacency/tmpy8h_u5wt.pyomo.soln']

Welcome to the CBC MILP Solver 
Version: 2.9.8 
Build Date: Oct 29 2018 
Revision Number: 2404 

command line - /home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/_Solvers/Ubuntu_Bionic/Cbc-2.9.8/bin/cbc -printingOptions all -import /home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/04_Adjacency/tmpy8h_u5wt.pyomo.lp -stat=1 -solve -solu /home/mf/Dropbox/DATA/Arbeit/ETH/Opensource_Optimization_Workshop/04_Adjacency/tmpy8h_u5wt.pyomo.soln (default strategy 1)
Option for printingOptions changed from normal to all
 CoinLpIO::readLp(): Maximization problem reformulated as minimization
Presolve 1508 (-1) rows, 798 (-1) columns and 3282 (-1) elements
Statistics for presolved model
Original problem has 798 integers (798 of which binary)
Presolved problem has 798 integers (798 of which binary)
==== 0 zero objective 266 different
==== absolute objective values 266 different
==== for integers 0 zero objective 266 different
==== for integers absolute objective values 266 different
===== end objective counts


Problem has 1508 rows, 798 columns (798 with objective) and 3282 elements
There are 60 singletons with objective 
Column breakdown:
0 of type 0.0->inf, 0 of type 0.0->up, 0 of type lo->inf, 
0 of type lo->up, 0 of type free, 0 of type fixed, 
0 of type -inf->0.0, 0 of type -inf->up, 798 of type 0.0->1.0 
Row breakdown:
0 of type E 0.0, 0 of type E 1.0, 0 of type E -1.0, 
0 of type E other, 0 of type G 0.0, 0 of type G 1.0, 
0 of type G other, 0 of type L 0.0, 1508 of type L 1.0, 
0 of type L other, 0 of type Range 0.0->1.0, 0 of type Range other, 
0 of type Free 
Continuous objective value is -54256.7 - 0.02 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 454 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 409 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 242 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 902 rows, 738 columns (738 integer (738 of which binary)) and 2529 elements
Cbc0038I Initial state - 278 integers unsatisfied sum - 98.3333
Cbc0038I Solution found of -32077.1
Cbc0038I Before mini branch and bound, 460 integers at bound fixed and 0 continuous
Cbc0038I Full problem 902 rows 738 columns, reduced to 418 rows 278 columns
Cbc0038I Mini branch and bound improved solution from -32077.1 to -53042.5 (0.44 seconds)
Cbc0038I Round again with cutoff of -53075.7
Cbc0038I Pass   1: suminf.   25.40074 (65) obj. -53075.7 iterations 369
Cbc0038I Pass   2: suminf.   15.54275 (42) obj. -53075.7 iterations 137
Cbc0038I Pass   3: suminf.   15.46246 (31) obj. -53075.7 iterations 28
Cbc0038I Pass   4: suminf.   15.44084 (32) obj. -53075.7 iterations 49
Cbc0038I Pass   5: suminf.   15.44084 (32) obj. -53075.7 iterations 19
Cbc0038I Pass   6: suminf.   14.93073 (73) obj. -53075.7 iterations 28
Cbc0038I Pass   7: suminf.   13.37079 (76) obj. -53075.7 iterations 24
Cbc0038I Pass   8: suminf.   13.37079 (76) obj. -53075.7 iterations 3
Cbc0038I Pass   9: suminf.   13.37079 (76) obj. -53075.7 iterations 1
Cbc0038I Pass  10: suminf.    3.94087 (13) obj. -53075.7 iterations 9
Cbc0038I Pass  11: suminf.    3.94087 (13) obj. -53075.7 iterations 15
Cbc0038I Solution found of -53145.4
Cbc0038I Before mini branch and bound, 451 integers at bound fixed and 0 continuous
Cbc0038I Full problem 902 rows 738 columns, reduced to 428 rows 287 columns
Cbc0038I Mini branch and bound did not improve solution (0.74 seconds)
Cbc0038I Round again with cutoff of -53191.3
Cbc0038I Pass  12: suminf.   32.37625 (121) obj. -53191.3 iterations 98
Cbc0038I Pass  13: suminf.   31.14681 (88) obj. -53191.3 iterations 80
Cbc0038I Pass  14: suminf.   26.51225 (88) obj. -53191.3 iterations 30
Cbc0038I Pass  15: suminf.   12.79741 (150) obj. -53191.3 iterations 44
Cbc0038I Pass  16: suminf.    9.56671 (21) obj. -53191.3 iterations 64
Cbc0038I Pass  17: suminf.    4.33419 (11) obj. -53191.3 iterations 160
Cbc0038I Pass  18: suminf.    4.33419 (11) obj. -53191.3 iterations 31
Cbc0038I Pass  19: suminf.    3.04937 (9) obj. -53191.3 iterations 157
Cbc0038I Pass  20: suminf.    3.04937 (9) obj. -53191.3 iterations 62
Cbc0038I Pass  21: suminf.    3.04937 (9) obj. -53191.3 iterations 44
Cbc0038I Pass  22: suminf.    3.04937 (9) obj. -53191.3 iterations 15
Cbc0038I Pass  23: suminf.    3.04937 (9) obj. -53191.3 iterations 175
Cbc0038I Pass  24: suminf.    4.68323 (10) obj. -53191.3 iterations 125
Cbc0038I Pass  25: suminf.    4.68323 (10) obj. -53191.3 iterations 98
Cbc0038I Pass  26: suminf.    4.68323 (10) obj. -53191.3 iterations 3
Cbc0038I Pass  27: suminf.    4.68323 (10) obj. -53191.3 iterations 5
Cbc0038I Pass  28: suminf.    3.04937 (9) obj. -53191.3 iterations 19
Cbc0038I Pass  29: suminf.    3.04937 (9) obj. -53191.3 iterations 7
Cbc0038I Pass  30: suminf.    3.04937 (9) obj. -53191.3 iterations 193
Cbc0038I Pass  31: suminf.    3.04937 (9) obj. -53191.3 iterations 9
Cbc0038I Pass  32: suminf.    3.04937 (9) obj. -53191.3 iterations 39
Cbc0038I Pass  33: suminf.    7.81606 (16) obj. -53191.3 iterations 126
Cbc0038I Pass  34: suminf.    5.08228 (15) obj. -53191.3 iterations 113
Cbc0038I Pass  35: suminf.    5.08228 (30) obj. -53191.3 iterations 27
Cbc0038I Pass  36: suminf.    5.08228 (30) obj. -53191.3 iterations 194
Cbc0038I Pass  37: suminf.    5.08228 (30) obj. -53191.3 iterations 28
Cbc0038I Pass  38: suminf.    4.74346 (28) obj. -53191.3 iterations 30
Cbc0038I Pass  39: suminf.    4.40464 (13) obj. -53191.3 iterations 15
Cbc0038I Pass  40: suminf.    3.04937 (9) obj. -53191.3 iterations 122
Cbc0038I Pass  41: suminf.    3.04937 (9) obj. -53191.3 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 350 integers at bound fixed and 0 continuous
Cbc0038I Full problem 902 rows 738 columns, reduced to 498 rows 348 columns - 78 fixed gives 290, 187 - ok now
Cbc0038I Full problem 902 rows 738 columns, reduced to 270 rows 171 columns
Cbc0038I Mini branch and bound did not improve solution (0.94 seconds)
Cbc0038I After 0.94 seconds - Feasibility pump exiting with objective of -53145.4 - took 0.80 seconds
Cbc0012I Integer solution of -53145.406 found by feasibility pump after 0 iterations and 0 nodes (0.94 seconds)
Cbc0038I Full problem 902 rows 738 columns, reduced to 423 rows 283 columns
Cbc0031I 20 added rows had average density of 33.3
Cbc0013I At root node, 20 cuts changed objective from -53374.74 to -53234.497 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 543 row cuts average 70.4 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 236 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -53145.406 best solution, best possible -53234.497 (2.61 seconds)
Cbc0012I Integer solution of -53170.134 found by DiveCoefficient after 1149 iterations and 1 nodes (2.72 seconds)
Cbc0001I Search completed - best objective -53170.13426865282, took 1612 iterations and 6 nodes (2.95 seconds)
Cbc0032I Strong branching done 278 times (11274 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Cuts at root node changed objective from -53374.7 to -53234.5
Probing was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Gomory was tried 29 times and created 556 cuts of which 0 were active after adding rounds of cuts (0.213 seconds)
Knapsack was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Clique was tried 18 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
MixedIntegerRounding2 was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 18 times and created 236 cuts of which 0 were active after adding rounds of cuts (0.102 seconds)

Result - Optimal solution found

Objective value:                -53170.13426865
Enumerated nodes:               6
Total iterations:               1612
Time (CPU seconds):             2.98
Time (Wallclock seconds):       3.14

Total time (CPU seconds):       2.99   (Wallclock seconds):       3.17


